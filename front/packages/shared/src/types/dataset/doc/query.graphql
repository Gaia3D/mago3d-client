fragment DatasetAssetFile on AssetFile {
    id
    filename
    contentSize
    contentType
}

query AssetStatus($id: ID!) {
    asset(id: $id) {
        id
        status
    }
}

query PropsPaged ($filter: PropFilterInput, $pageable: PropPageableInput) {
    propsPaged(
        filter: $filter,
        pageable: $pageable
    )
    {
        items {
            id
            name
            createdBy
            createdAt
            updatedBy
            updatedAt
            files {
                id
                filename
                contentType
                contentSize
                download
                width
                height
                createdBy
                createdAt
                updatedBy
                updatedAt
                thumbnail {
                    filename
                    contentType
                    contentSize
                    download
                }
            }
        }
        pageInfo {
            totalPages
            totalItems
            page
            size
            hasNextPage
            hasPreviousPage
        }
    }
}

query DatasetAssetList($filter:AssetFilterInput, $pageable: AssetPageableInput) @api(name: dataset) {
    assets(
        filter: $filter
        pageable: $pageable
    )
    {
        items {
            id
            name
            assetType
            enabled
            access
            status
            createdAt
            updatedAt
        }
        pageInfo {
            totalPages
            totalItems
            page
            size
        }
    }
}

query DatasetGroupList @api(name: dataset) {
    groups(
        filter: {
            enabled: {
                eq: true
            }
        }
        pageable: {
            page: 0
            size: 1000
            sort: CREATED_AT_DESC
        }
    )
    {
        items {
            id
            name
        }
    }
}

query DatasetGroupListForUpdate($id: ID!) @api(name: dataset) {
    group(id: $id) {
        id
        name
        description
        assets {
            id
            name
            assetType
            createdAt
        }
    }
}

query DatasetAssetForDetail($id:ID!) @api(name: dataset) {
    asset(id: $id){
        id
        name
        description
        assetType
        properties
        groups {
            id
            name
        }
        files {
            id
            ...DatasetAssetFile
        }
        process {
            id
            status
        }
    }
}

query AssetForDownloadOriginFile($id:ID!) @api(name: dataset) {
    asset(id: $id){
       id
        name
        download
    }
}

query AssetForDownloadConvertFile($id:ID!) @api(name: dataset) {
    asset(id: $id){
        id
        name
        convertedFiles {
              id
               taskId
               filename
               contentType
               contentSize
               download
               filepath
        }
    }
}

query DatasetAssetForUpdate($id: ID!) @api(name: dataset) {
    asset(id: $id) {
        id
        name
        description
        assetType
        properties
        groups {
            id
            name
        }
        files {
            id
            filename
            createdAt
        }
    }
    groups {
        items {
            id
            name
        }
    }
}

query DatasetAssetForLayer($id:ID!) @api(name: dataset) {
    asset (
        id: $id
    )
    {
        id
        name
        description
        assetType
        createdAt
        createdBy
        enabled
        updatedAt
        updatedBy
        files {
            id
            createdAt
            createdBy
            updatedAt
            updatedBy
        }
    }
}

query DatasetProcessLog($assetId: ID!) @api(name: dataset) {
    processes(
        filter : {
            assetId: {
                eq: $assetId
            }
        }
    )
    {
        items {
            id
            name
            status
            tasks {
                id
                error
                stacktrace
            }
            createdAt
        }
        pageInfo {
            totalPages
            totalItems
            page
            size
        }
    }
}

query DatasetProcess($id: ID!) @api(name: dataset) {
    process(id: $id) {
        id
        name
        status
        context
        tasks {
            id
            status
            stacktrace
            error
        }
        createdBy
        createdAt
        updatedBy
        updatedAt
        properties
    }
}




query dataGroups{
    groups(
        pageable: {
            page: 0
            size: 1000
            sort: CREATED_AT_DESC
        }
    )
    {
        __typename
        items {
            id
            name
            description
            enabled
            access
            createdAt
        }
    }
}

query dataAssets($filter: AssetFilterInput, $pageable: AssetPageableInput){
    assets(
        filter : $filter
        pageable: $pageable
    )
    {
        items {
            id
            groups {
                id
                name
                description
                enabled
                access
            }
            name
            description
            assetType
            enabled
            access
            createdBy
            createdAt
            updatedBy
            updatedAt
            process {
                id
                name
                context
                properties
                status
                tasks {
                    id
                    status
                    error
                    stacktrace
                }
            }
        }
        pageInfo {
            totalPages
            totalItems
            page
            size
        }
    }
}